// Code generated by go-swagger; DO NOT EDIT.

package schema

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateSchemaReader is a Reader for the UpdateSchema structure.
type UpdateSchemaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSchemaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateSchemaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateSchemaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateSchemaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateSchemaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateSchemaOK creates a UpdateSchemaOK with default headers values
func NewUpdateSchemaOK() *UpdateSchemaOK {
	return &UpdateSchemaOK{}
}

/*UpdateSchemaOK handles this case with default header values.

Successfully updated schema
*/
type UpdateSchemaOK struct {
}

func (o *UpdateSchemaOK) Error() string {
	return fmt.Sprintf("[PUT /schemas/{schemaName}][%d] updateSchemaOK ", 200)
}

func (o *UpdateSchemaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSchemaBadRequest creates a UpdateSchemaBadRequest with default headers values
func NewUpdateSchemaBadRequest() *UpdateSchemaBadRequest {
	return &UpdateSchemaBadRequest{}
}

/*UpdateSchemaBadRequest handles this case with default header values.

Missing or invalid request body
*/
type UpdateSchemaBadRequest struct {
}

func (o *UpdateSchemaBadRequest) Error() string {
	return fmt.Sprintf("[PUT /schemas/{schemaName}][%d] updateSchemaBadRequest ", 400)
}

func (o *UpdateSchemaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSchemaNotFound creates a UpdateSchemaNotFound with default headers values
func NewUpdateSchemaNotFound() *UpdateSchemaNotFound {
	return &UpdateSchemaNotFound{}
}

/*UpdateSchemaNotFound handles this case with default header values.

Schema not found
*/
type UpdateSchemaNotFound struct {
}

func (o *UpdateSchemaNotFound) Error() string {
	return fmt.Sprintf("[PUT /schemas/{schemaName}][%d] updateSchemaNotFound ", 404)
}

func (o *UpdateSchemaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSchemaInternalServerError creates a UpdateSchemaInternalServerError with default headers values
func NewUpdateSchemaInternalServerError() *UpdateSchemaInternalServerError {
	return &UpdateSchemaInternalServerError{}
}

/*UpdateSchemaInternalServerError handles this case with default header values.

Internal error
*/
type UpdateSchemaInternalServerError struct {
}

func (o *UpdateSchemaInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /schemas/{schemaName}][%d] updateSchemaInternalServerError ", 500)
}

func (o *UpdateSchemaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
