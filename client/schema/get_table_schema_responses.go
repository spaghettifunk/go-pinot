// Code generated by go-swagger; DO NOT EDIT.

package schema

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetTableSchemaReader is a Reader for the GetTableSchema structure.
type GetTableSchemaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTableSchemaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTableSchemaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetTableSchemaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTableSchemaOK creates a GetTableSchemaOK with default headers values
func NewGetTableSchemaOK() *GetTableSchemaOK {
	return &GetTableSchemaOK{}
}

/*GetTableSchemaOK handles this case with default header values.

Success
*/
type GetTableSchemaOK struct {
}

func (o *GetTableSchemaOK) Error() string {
	return fmt.Sprintf("[GET /tables/{tableName}/schema][%d] getTableSchemaOK ", 200)
}

func (o *GetTableSchemaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTableSchemaNotFound creates a GetTableSchemaNotFound with default headers values
func NewGetTableSchemaNotFound() *GetTableSchemaNotFound {
	return &GetTableSchemaNotFound{}
}

/*GetTableSchemaNotFound handles this case with default header values.

Table not found
*/
type GetTableSchemaNotFound struct {
}

func (o *GetTableSchemaNotFound) Error() string {
	return fmt.Sprintf("[GET /tables/{tableName}/schema][%d] getTableSchemaNotFound ", 404)
}

func (o *GetTableSchemaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
