// Code generated by go-swagger; DO NOT EDIT.

package schema

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// AddSchemaReader is a Reader for the AddSchema structure.
type AddSchemaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddSchemaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddSchemaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddSchemaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddSchemaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddSchemaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddSchemaOK creates a AddSchemaOK with default headers values
func NewAddSchemaOK() *AddSchemaOK {
	return &AddSchemaOK{}
}

/*AddSchemaOK handles this case with default header values.

Successfully created schema
*/
type AddSchemaOK struct {
}

func (o *AddSchemaOK) Error() string {
	return fmt.Sprintf("[POST /schemas][%d] addSchemaOK ", 200)
}

func (o *AddSchemaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddSchemaBadRequest creates a AddSchemaBadRequest with default headers values
func NewAddSchemaBadRequest() *AddSchemaBadRequest {
	return &AddSchemaBadRequest{}
}

/*AddSchemaBadRequest handles this case with default header values.

Missing or invalid request body
*/
type AddSchemaBadRequest struct {
}

func (o *AddSchemaBadRequest) Error() string {
	return fmt.Sprintf("[POST /schemas][%d] addSchemaBadRequest ", 400)
}

func (o *AddSchemaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddSchemaNotFound creates a AddSchemaNotFound with default headers values
func NewAddSchemaNotFound() *AddSchemaNotFound {
	return &AddSchemaNotFound{}
}

/*AddSchemaNotFound handles this case with default header values.

Schema not found
*/
type AddSchemaNotFound struct {
}

func (o *AddSchemaNotFound) Error() string {
	return fmt.Sprintf("[POST /schemas][%d] addSchemaNotFound ", 404)
}

func (o *AddSchemaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddSchemaInternalServerError creates a AddSchemaInternalServerError with default headers values
func NewAddSchemaInternalServerError() *AddSchemaInternalServerError {
	return &AddSchemaInternalServerError{}
}

/*AddSchemaInternalServerError handles this case with default header values.

Internal error
*/
type AddSchemaInternalServerError struct {
}

func (o *AddSchemaInternalServerError) Error() string {
	return fmt.Sprintf("[POST /schemas][%d] addSchemaInternalServerError ", 500)
}

func (o *AddSchemaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
