// Code generated by go-swagger; DO NOT EDIT.

package broker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ToggleQueryRateLimitingReader is a Reader for the ToggleQueryRateLimiting structure.
type ToggleQueryRateLimitingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ToggleQueryRateLimitingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewToggleQueryRateLimitingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewToggleQueryRateLimitingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewToggleQueryRateLimitingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewToggleQueryRateLimitingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewToggleQueryRateLimitingOK creates a ToggleQueryRateLimitingOK with default headers values
func NewToggleQueryRateLimitingOK() *ToggleQueryRateLimitingOK {
	return &ToggleQueryRateLimitingOK{}
}

/*ToggleQueryRateLimitingOK handles this case with default header values.

Success
*/
type ToggleQueryRateLimitingOK struct {
}

func (o *ToggleQueryRateLimitingOK) Error() string {
	return fmt.Sprintf("[POST /brokers/instances/{instanceName}/qps][%d] toggleQueryRateLimitingOK ", 200)
}

func (o *ToggleQueryRateLimitingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewToggleQueryRateLimitingBadRequest creates a ToggleQueryRateLimitingBadRequest with default headers values
func NewToggleQueryRateLimitingBadRequest() *ToggleQueryRateLimitingBadRequest {
	return &ToggleQueryRateLimitingBadRequest{}
}

/*ToggleQueryRateLimitingBadRequest handles this case with default header values.

Bad Request
*/
type ToggleQueryRateLimitingBadRequest struct {
}

func (o *ToggleQueryRateLimitingBadRequest) Error() string {
	return fmt.Sprintf("[POST /brokers/instances/{instanceName}/qps][%d] toggleQueryRateLimitingBadRequest ", 400)
}

func (o *ToggleQueryRateLimitingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewToggleQueryRateLimitingNotFound creates a ToggleQueryRateLimitingNotFound with default headers values
func NewToggleQueryRateLimitingNotFound() *ToggleQueryRateLimitingNotFound {
	return &ToggleQueryRateLimitingNotFound{}
}

/*ToggleQueryRateLimitingNotFound handles this case with default header values.

Instance not found
*/
type ToggleQueryRateLimitingNotFound struct {
}

func (o *ToggleQueryRateLimitingNotFound) Error() string {
	return fmt.Sprintf("[POST /brokers/instances/{instanceName}/qps][%d] toggleQueryRateLimitingNotFound ", 404)
}

func (o *ToggleQueryRateLimitingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewToggleQueryRateLimitingInternalServerError creates a ToggleQueryRateLimitingInternalServerError with default headers values
func NewToggleQueryRateLimitingInternalServerError() *ToggleQueryRateLimitingInternalServerError {
	return &ToggleQueryRateLimitingInternalServerError{}
}

/*ToggleQueryRateLimitingInternalServerError handles this case with default header values.

Internal error
*/
type ToggleQueryRateLimitingInternalServerError struct {
}

func (o *ToggleQueryRateLimitingInternalServerError) Error() string {
	return fmt.Sprintf("[POST /brokers/instances/{instanceName}/qps][%d] toggleQueryRateLimitingInternalServerError ", 500)
}

func (o *ToggleQueryRateLimitingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
