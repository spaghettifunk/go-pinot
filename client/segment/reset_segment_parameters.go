// Code generated by go-swagger; DO NOT EDIT.

package segment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewResetSegmentParams creates a new ResetSegmentParams object
// with the default values initialized.
func NewResetSegmentParams() *ResetSegmentParams {
	var ()
	return &ResetSegmentParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewResetSegmentParamsWithTimeout creates a new ResetSegmentParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewResetSegmentParamsWithTimeout(timeout time.Duration) *ResetSegmentParams {
	var ()
	return &ResetSegmentParams{

		timeout: timeout,
	}
}

// NewResetSegmentParamsWithContext creates a new ResetSegmentParams object
// with the default values initialized, and the ability to set a context for a request
func NewResetSegmentParamsWithContext(ctx context.Context) *ResetSegmentParams {
	var ()
	return &ResetSegmentParams{

		Context: ctx,
	}
}

// NewResetSegmentParamsWithHTTPClient creates a new ResetSegmentParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewResetSegmentParamsWithHTTPClient(client *http.Client) *ResetSegmentParams {
	var ()
	return &ResetSegmentParams{
		HTTPClient: client,
	}
}

/*ResetSegmentParams contains all the parameters to send to the API endpoint
for the reset segment operation typically these are written to a http.Request
*/
type ResetSegmentParams struct {

	/*MaxWaitTimeMs
	  Maximum time in milliseconds to wait for reset to be completed. By default, uses serverAdminRequestTimeout

	*/
	MaxWaitTimeMs *int64
	/*SegmentName
	  Name of the segment

	*/
	SegmentName string
	/*TableNameWithType
	  Name of the table with type

	*/
	TableNameWithType string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the reset segment params
func (o *ResetSegmentParams) WithTimeout(timeout time.Duration) *ResetSegmentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the reset segment params
func (o *ResetSegmentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the reset segment params
func (o *ResetSegmentParams) WithContext(ctx context.Context) *ResetSegmentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the reset segment params
func (o *ResetSegmentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the reset segment params
func (o *ResetSegmentParams) WithHTTPClient(client *http.Client) *ResetSegmentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the reset segment params
func (o *ResetSegmentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMaxWaitTimeMs adds the maxWaitTimeMs to the reset segment params
func (o *ResetSegmentParams) WithMaxWaitTimeMs(maxWaitTimeMs *int64) *ResetSegmentParams {
	o.SetMaxWaitTimeMs(maxWaitTimeMs)
	return o
}

// SetMaxWaitTimeMs adds the maxWaitTimeMs to the reset segment params
func (o *ResetSegmentParams) SetMaxWaitTimeMs(maxWaitTimeMs *int64) {
	o.MaxWaitTimeMs = maxWaitTimeMs
}

// WithSegmentName adds the segmentName to the reset segment params
func (o *ResetSegmentParams) WithSegmentName(segmentName string) *ResetSegmentParams {
	o.SetSegmentName(segmentName)
	return o
}

// SetSegmentName adds the segmentName to the reset segment params
func (o *ResetSegmentParams) SetSegmentName(segmentName string) {
	o.SegmentName = segmentName
}

// WithTableNameWithType adds the tableNameWithType to the reset segment params
func (o *ResetSegmentParams) WithTableNameWithType(tableNameWithType string) *ResetSegmentParams {
	o.SetTableNameWithType(tableNameWithType)
	return o
}

// SetTableNameWithType adds the tableNameWithType to the reset segment params
func (o *ResetSegmentParams) SetTableNameWithType(tableNameWithType string) {
	o.TableNameWithType = tableNameWithType
}

// WriteToRequest writes these params to a swagger request
func (o *ResetSegmentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.MaxWaitTimeMs != nil {

		// query param maxWaitTimeMs
		var qrMaxWaitTimeMs int64
		if o.MaxWaitTimeMs != nil {
			qrMaxWaitTimeMs = *o.MaxWaitTimeMs
		}
		qMaxWaitTimeMs := swag.FormatInt64(qrMaxWaitTimeMs)
		if qMaxWaitTimeMs != "" {
			if err := r.SetQueryParam("maxWaitTimeMs", qMaxWaitTimeMs); err != nil {
				return err
			}
		}

	}

	// path param segmentName
	if err := r.SetPathParam("segmentName", o.SegmentName); err != nil {
		return err
	}

	// path param tableNameWithType
	if err := r.SetPathParam("tableNameWithType", o.TableNameWithType); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
